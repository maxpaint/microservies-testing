spring:
  application.name: greeting
  # ===============================
  # = DATA SOURCE
  # ===============================
  # Set here configurations for the database connection
  datasource:
    hikari:
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
      maximum-pool-size: 50
      allow-pool-suspension: true
    url: jdbc:postgresql://localhost:5432/greeting
    spring.datasource.username: postgres
    spring.datasource.password: postgres@123
  driver-class-name: org.postgresql.Driver
  testOnBorrow: true
  testWhileIdle: true # Keep the connection alive if idle for a long time (needed in production)
  validationQuery: SELECT 1

  # ===============================
  # = JPA / HIBERNATE
  # ===============================
  # Show or not log for each sql query
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect #Because detection is disabled you have to set correct dialect by hand.
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect # Allows Hibernate to generate SQL optimized for a particular DBMS
        generate_statistics: true #Turn Statistics on
        format_sql: true
        temp.use_jdbc_metadata_defaults: false #Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
    show-sql: true
    hibernate:
      ddl-auto: validate
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl # Naming strategy
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy # Naming strategy


logging:
  level:
    org.hibernate:
      stat: debug #Turn Statistics on
      type: trace # Show all queries

person.greeting: Hello !

weather:
  token: 69ad735655d87512c44a5c3f919cd95b
  url: https://api.darksky.net/forecast/
  coordinates: 50.443231,30.525237

